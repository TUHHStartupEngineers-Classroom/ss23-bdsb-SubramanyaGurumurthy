[
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "Tidyverse is a collection of R packages designed to make data manipulation, visualization, and analysis easier and more consistent. It provides a set of tools and functions that follow a consistent grammar and syntax, making it easier to work with data in a tidy and organized manner."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html#explanation-on-how-to-solve",
    "href": "content/01_journal/01_tidyverse.html#explanation-on-how-to-solve",
    "title": "Tidyverse",
    "section": "1.1 Explanation On how to solve:",
    "text": "1.1 Explanation On how to solve:\n\nLoad necessary libraries: This code block loads the required libraries, dplyr and ggplot2, which are used for data manipulation and plotting, respectively.\nRead in the data file: The code reads an Excel file named “bike_orderlines_new.xlsx” and assigns it to the variable bike_orderlines_wrangled_tbl_new. The data is stored as a tibble, a modern version of a data frame. Please take care of path to read the file.\nSplit the location data: The separate() function is used to split the “location” column of the bike_orderlines_wrangled_tbl_new tibble into two separate columns, “city” and “state”. The separator used is “,” (comma followed by a space). The original “location” column is retained in the tibble.\nGroup the data and calculate total revenue: The group_by() function groups the data in bike_orderlines_wrangled_tbl_new by “state”. Then, the summarize() function calculates the total revenue by summing the “total_price” column. The results are stored in the sales_by_loc_tbl_new tibble.\nCreate a bar plot: The ggplot() function is used to initialize a new ggplot object, with sales_by_loc_tbl_new as the data. The aesthetic mappings are set with aes(x = state, y = total_revenue). The geom_bar() function is used to create a bar plot with “state” on the x-axis and “total_revenue” on the y-axis. Additional formatting and labeling options are set using labs() and theme() functions.\nGroup the data by state and year and calculate total revenue: Similar to step 4, this code block groups the data by both “state” and “model_year” columns and calculates the total revenue for each group. The results are stored in the sales_by_loc_year_tbl_new tibble.\nCreate a bar plot with facets: This code block creates a bar plot of the total revenue by “model_year” for each “state”. The facet_wrap() function is used to create a grid of plots, with each plot representing a different state. The scales = “free_x” argument allows each facet to have an independent x-axis scale. The ncol = 4 argument sets the number of columns in the grid to 4.\n\nThe Complete solution to challenge:\n##############################################################################################\n#Assignment task\n##############################################################################################\n\n# Load necessary libraries\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Read in the data file\nbike_orderlines_wrangled_tbl_new <- read_excel(\"ds_data/01_bike_sales/02_wrangled_data/bike_orderlines_new.xlsx\")\n\n# Split the location data into separate columns for state and city\nbike_orderlines_wrangled_tbl_new <- bike_orderlines_wrangled_tbl_new %>%\nseparate(location, into = c(\"city\", \"state\"), sep = \", \", remove = FALSE)\n\n# Group the data by state and calculate the total revenue\nsales_by_loc_tbl_new <- bike_orderlines_wrangled_tbl_new %>%\ngroup_by(state) %>%\nsummarize(total_revenue = sum(total_price))\n\n# Create a bar plot of the total revenue by state#\nggplot(sales_by_loc_tbl_new, aes(x = state, y = total_revenue)) +\ngeom_bar(stat = \"identity\", fill = \"steelblue\") +\nlabs(title = \"Total Revenue by State\", x = \"State\", y = \"Total Revenue\") +\ntheme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n# Group the data by state and year and calculate the total revenue\nsales_by_loc_year_tbl_new <- bike_orderlines_wrangled_tbl_new %>%\ngroup_by(state, model_year) %>%\nsummarize(total_revenue = sum(total_price))\n\n# Create a bar plot of the total revenue by state and year\nggplot(sales_by_loc_year_tbl_new, aes(x = model_year, y = total_revenue)) +\ngeom_bar(stat = \"identity\", fill = \"steelblue\") +\nlabs(title = \"Total Revenue by State and Year\", x = \"Year\", y = \"Total Revenue\") +\ntheme(axis.text.x = element_text(angle = 45, hjust = 1)) +\nfacet_wrap(~state, scales = \"free_x\", ncol = 4)"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "Hi this is Subramanya Nanjangud Gurumurthy. I am part of the course Business Data Science Basics. My Matriculation Number is 54843"
  }
]